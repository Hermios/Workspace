package nikoBlex.requests.get;

import java.io.PrintWriter;
import java.lang.reflect.Method;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import nikoBlex.requests.getset.AbstractGetSet;
import nikoBlex.requests.getset.AbstractNodeGetter;
import nikoBlex.requests.getset.GetterSetterFactory;
import nikoBlex.requests.getset.IGetter;
import nikoBlex.requests.keys.ServletContextPropertyKeys;
import nikoBlex.requests.tools.ContextManager;
import nikoBlex.requests.tools.RequestGenericTools;

import org.json.JSONObject;

import nikoBlex.tools.serviceLocators.ServiceLocator;

public class GetDataHelper {
	public static void doGet(HttpServletRequest request, HttpServletResponse response,int userStatusInt) throws InstantiationException, IllegalAccessException
	{
		String target=RequestGenericTools.getTarget(request);		
		if(target.isEmpty())
			return;
		if(target.contains("/"))
			target=target.substring(target.lastIndexOf("/")+1);
		String[] targetData=target.split("\\.");
		if(targetData.length!=2)
			return;
		ServiceLocator sl=(ServiceLocator)new ContextManager(request.getServletContext()).getAttribute(ServletContextPropertyKeys.serviceLocator);
		GetDataHelpersManager gdhm=sl.getService(GetDataHelpersManager.class);
		Class<? extends IGetter> classGetter=gdhm.get(targetData[0]);
		IGetter getter=GetterSetterFactory.constructGetter(classGetter, request);
		PrintWriter out=null;
		try 
		{
			Object returnObject=null;			 	    
			if(getter.getAuthorizationLevel()>userStatusInt)
				returnObject="You don't have rights to start this command";				
			else
			{
				Method invokingMethod=getter.getClass().getMethod(targetData[1]);
				returnObject=invokingMethod.invoke(getter);
			}
			if(returnObject==null)
				return;
			out= response.getWriter();
			response.setContentType("text/html;charset=UTF-8");
			if(returnObject instanceof HashMap)
			{
				response.setContentType("application/json;charset=utf-8");
				@SuppressWarnings("unchecked")
				JSONObject jsonArray=new JSONObject((HashMap<String,String>)returnObject);
				out.write(jsonArray.toString());
			}			
			else
	        out.println(returnObject.toString());
		}
	    catch (Exception e) 
	    {		
	    	e.printStackTrace();
	    }
		finally 
		{
			if(out!=null)
		        out.close();
	    }
	}
}
