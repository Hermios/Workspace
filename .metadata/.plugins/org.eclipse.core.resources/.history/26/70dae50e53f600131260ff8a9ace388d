package mamshops.admin.setters;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.ResourceBundle;


import java.util.regex.Pattern;

import javax.servlet.UnavailableException;

import mamshops.requests.keys.RequestParameterKeys;
import mamshops.requests.post.AbstractSetter;
import mamshops.requests.tools.UserMethodAccess;
import mamshops.tools.entries.PropertiesManager;

public class ResourceBundlesSetter extends AbstractSetter{
	private final static String PROPERTIES_EXTENSION=".properties";
	ResourceBundle _resourceBundle;
	String _description;
	public ResourceBundlesSetter() {
		super(UserMethodAccess.admin,null);
	}
	
	public String addNewString() throws UnavailableException
	{
		String[] parameters=_request.getParameterValues(PropertiesManager.getProperty(RequestParameterKeys.ATTRIBUTE_PARAMETER_ID)+"[]");
		String fileName=parameters[0];
		String language=parameters[1];
		if(!language.equals("und"))
			fileName+="_"+language;
		fileName+=PROPERTIES_EXTENSION;
		String key=(parameters[0]+"."+parameters[2]).toLowerCase();
		String keyCheckResult=checkKeyValidity(key);
		if(keyCheckResult!=null)
			return keyCheckResult;
		String value=parameters[3];
		File file=new File(PropertiesManager.getResourceBundlesPath(),fileName);
		BufferedWriter bw=null;
		try {
			bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file.getAbsolutePath(),true),"UTF8"));
			bw.write(System.lineSeparator());
			bw.write(key+"="+value);
		} catch (IOException e) {
			e.printStackTrace();
		}
		finally
		{
			try {
				if(bw!=null)
					bw.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		return "";
	}
	
	private static String checkKeyValidity(String key)
	{
		Pattern p=Pattern.compile("^[\\w\\.]+$");
		if(!p.matcher(key).find())
			return "Only digits, underscore, letters and . are allowed";
		if(key.contains(".."))
			return "Two successive dots are not allowed";
		return null;
	}	
}
