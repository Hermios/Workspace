package nikoBlex.requests.post;

import java.io.PrintWriter;
import java.lang.reflect.Method;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import nikoBlex.businessmodels.database.GraphNode;
import nikoBlex.requests.getset.AbstractSetter;
import nikoBlex.requests.keys.ServletContextPropertyKeys;
import nikoBlex.requests.tools.ContextManager;
import nikoBlex.requests.tools.RequestGenericTools;
import nikoBlex.tools.serviceLocators.ServiceLocator;

public class ActionHelper {
	public static void doPost(HttpServletRequest request, HttpServletResponse response,int userStatusInt) throws InstantiationException, IllegalAccessException
	{
		String target=RequestGenericTools.getTarget(request);		
		if(target.isEmpty())
			return;
		if(target.contains("/"))
			target=target.substring(target.lastIndexOf("/")+1);
		String[] targetData=target.split("\\.");
		if(targetData.length!=3)
			return;
		ServiceLocator sl=(ServiceLocator)new ContextManager(request.getServletContext()).getAttribute(ServletContextPropertyKeys.serviceLocator);
		ActionHelpersManager ahm=sl.getService(ActionHelpersManager.class);		
		Class<? extends AbstractSetter> classSetter=ahm.getActionHelper(targetData[1]);
		AbstractSetter setter=AbstractSetter.construct(classSetter, request);
		PrintWriter out=null;
		try 
		{
			Object returnObject=null;			 	    
			if(setter.getExpectedStatusMask()>userStatusInt)
				returnObject="You don't have rights to start this command";				
			else
			{
				Method invokingMethod=setter.getClass().getMethod(targetData[2]);
				returnObject=invokingMethod.invoke(setter);
			}
			if(returnObject==null)
				return;
			out= response.getWriter();
			response.setContentType("text/html;charset=UTF-8");
	        out.println(returnObject.toString());
		}
	    catch (Exception e) 
	    {		
	    	e.printStackTrace();
	    }
		finally 
		{
			if(out!=null)
		        out.close();
	    }
	}
}
