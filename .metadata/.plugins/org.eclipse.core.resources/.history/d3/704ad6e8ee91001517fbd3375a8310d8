package nikoBlex.requests.getset;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import nikoBlex.requests.authorizationlevels.IUserAuthorization;
import nikoBlex.requests.getset.AbstractGetSet;
import nikoBlex.requests.keys.RequestParameterKeys;
import nikoBlex.requests.keys.SessionAttributeKeys;

public abstract class AbstractGetSet implements IGetterSetter{
	protected HttpSession _session;
	protected HttpServletRequest _request;
	protected ServletContext _servletContext;
	protected String[] _parameters;	
	protected String _parameter;
	protected String _currentValue;
	protected IUserAuthorization _userAuthorization;
	protected SessionAttributeKeys _sessionAttributeKey;
	protected AbstractGetSet(IUserAuthorization methodAccess,SessionAttributeKeys sessionAttributeKey)
	{
		_userAuthorization=methodAccess;
		_sessionAttributeKey=sessionAttributeKey;
	}
	
	protected <T extends AbstractGetSet> T construct(Class<T> getset)
	{
		T instance;
		try {
			instance = getset.newInstance();
			instance.initialize(_request);
			return instance;
		} catch (InstantiationException e) {
			e.printStackTrace();
			return null;
		} catch (IllegalAccessException e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public void initialize(HttpServletRequest request){
		_parameter=null;
		_parameters=null;				
		_request=request;
		if(request==null)
			return;
		_servletContext=_request.getServletContext();
		_session=request.getSession();
		_parameter=request.getParameter(RequestParameterKeys.param.toString());
		_parameters=request.getParameterValues(RequestParameterKeys.param.toString()+"[]");
		if(_sessionAttributeKey!=null)
			_currentValue=(String)_session.getAttribute(_sessionAttributeKey.toString());			
	}
	
	public void setParameter(String parameter)
	{
		_parameter=parameter;
	}
	
	@Override
	public int getAuthorizationLevel() {
		return _userAuthorization.getAuthorizationLevel();
	}	
}
