package mamshops.servlet;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import mamshops.libs.httpRequests.HttpRequestsManager;
import mamshops.libs.serviceLocators.ServiceLocator;
import mamshops.libs.servletContexts.ServletContextPropertyKeys;
import mamshops.requests.dynamicContent.DynamicPageHelper;
import mamshops.requests.httpRequest.ContentType;
import mamshops.requests.httpRequest.RequestParameterKeys;

public class ServletFilter implements Filter{	
	
	@Override
	public void destroy() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain filterChain) throws IOException, ServletException 
	{							
		HttpServletRequest httpRequest = (HttpServletRequest)request;		
		String contentType=request.getParameter(RequestParameterKeys.WEBCONTENT_PARAMETER_ID);		
		if(null!=contentType && contentType.equals(ContentType.staticContent))
		{
			filterChain.doFilter(request, response);
			return;
		}
		HttpServletResponse httpResponse=(HttpServletResponse) response;
		if(contentType==null)
		{
			new DynamicPageHelper().doGet(httpRequest, httpResponse);
		}
			
		ServiceLocator sl=(ServiceLocator)request.getServletContext().getAttribute(ServletContextPropertyKeys.SERVICE_LOCATOR);
		HttpRequestsManager hrm=sl.getService(HttpRequestsManager.class);
		String  contextPath=httpRequest.getServletContext().getContextPath();			
		String uri=httpRequest.getRequestURI().replaceFirst(contextPath,"");
		while(uri.startsWith("/"))
			uri=uri.substring(1);
		
		while(uri.startsWith("/"))
			uri=uri.substring(1);
				
		if(uri.isEmpty())		 
			uri=DynamicPageHelper.getDefault();
		if(!uri.contains("/"))
		{
			httpResponse.sendRedirect(contextPath);
		 	return;
		}
		String[] uriData=uri.split("/");		
		if(!hrm.hasContent(uriData[0]))
		{
			String redirectURL=httpRequest.getRequestURL().toString().replace(httpRequest.getRequestURI(), "");
			httpResponse.sendRedirect(redirectURL);
			return;			 
		}
		
		System.out.println(uriData[0]);
		hrm.get(uriData[0]).doGet(httpRequest, httpResponse,uri);	
	}		
	@Override
	public void init(FilterConfig arg0) throws ServletException {
	}	
	
}
