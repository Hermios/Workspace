package mamshops.user.getters;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import mamshops.businessmodels.database.MamsNode;
import mamshops.businessmodels.relationships.types.IMamsRelationshipType;
import mamshops.businessmodels.relationships.types.ShopRelationshipType;
import mamshops.businessmodels.relationships.types.UserRelationshipType;
import mamshops.businessmodels.relationships.types.UserShopRelationshipType;
import mamshops.businessmodels.tools.UserMethodAccess;
import mamshops.main.getters.ContainerGetter;
import mamshops.main.getters.CountryGetter;
import mamshops.main.getters.ShopGetter;
import mamshops.requests.getset.AbstractGetter;

public class UserShopGetter extends AbstractGetter{
	private UserGetter _userGetter;
	private ShopGetter _shopGetter;
	
	public UserShopGetter() {
		super(UserMethodAccess.user,null);
	}	
	
	public ShopGetter getShop()
	{
		return _shopGetter;
	}
	
	public List<CountryGetter> getDeliveringCountries()
	{
		return getRelatedNodes(CountryGetter.class, UserShopRelationshipType.deliveringcountry);
	}	
	
	public ContainerGetter getContainer()
	{
		return getRelatedNode(ContainerGetter.class, UserShopRelationshipType.category);
	}
	
	@Override
	public void initialize(HttpServletRequest request){
		super.initialize(request);
		_userGetter=UserGetter.construct(UserGetter.class, request);
		_shopGetter=ShopGetter.construct(ShopGetter.class, request);
		if(_userGetter.exists() && _shopGetter.exists())
		{
			List<IMamsRelationshipType> listMamsRel=new ArrayList<>();
			listMamsRel.add(UserRelationshipType.usershop);
			listMamsRel.add(ShopRelationshipType.usershop);
			List<MamsNode> listNodes=_userGetter.getNode().getNodes(_shopGetter.getNode(),listMamsRel,true);
			if(!listNodes.isEmpty())
				_currentNode=listNodes.get(0);
		}
	
	}	
}
